{"version":3,"sources":["components/img/dex-logo.png","components/Movies.js","App.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","root","width","height","margin","backgroundColor","position","media","paddingTop","avatar","fontSize","cardHeader","actionBtn","bottom","modal","display","alignItems","justifyContent","paper","palette","background","border","boxShadow","shadows","padding","spacing","Movies","title","year","type","imdbID","poster","plot","actors","rating","genre","classes","React","useState","open","setOpen","Card","className","CardHeader","Avatar","aria-label","subheader","CardMedia","image","CardContent","Typography","variant","color","component","CardActions","IconButton","onClick","size","Modal","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","id","App","movies","setMovies","titles","setTitles","search","setSearch","query","setQuery","setType","setYear","useEffect","fetchMovies","a","fetch","response","json","data","Search","map","item","Title","i","length","responseTitle","dataTitle","storage","push","console","log","listYear","index","Date","getFullYear","Container","src","logo","alt","Button","disabled","maxWidth","onSubmit","e","preventDefault","noValidate","autoComplete","FormControl","InputLabel","Select","labelId","value","onChange","event","target","MenuItem","TextField","label","list","movie","key","Year","Type","Poster","Rated","Genre","Plot","Actors","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8EAAAA,EAAOC,QAAU,IAA0B,sC,uRCcrCC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,MAAO,QACPC,OAAQ,QACRC,OAAQ,MACRC,gBAAiB,UACjBC,SAAU,YAEZC,MAAO,CACLJ,OAAQ,EACRK,WAAY,UAEdC,OAAQ,CACNC,SAAU,OACVL,gBAAiB,WAEnBM,WAAY,CACVR,OAAQ,QAEVS,UAAW,CACTN,SAAU,WACVO,OAAQ,GAEVC,MAAO,CACLC,QAAS,OACTC,WAAY,SACZC,eAAgB,UAElBC,MAAO,CACLb,gBAAiBL,EAAMmB,QAAQC,WAAWF,MAC1CG,OAAQ,iBACRC,UAAWtB,EAAMuB,QAAQ,GACzBC,QAASxB,EAAMyB,QAAQ,EAAG,EAAG,QAIpBC,EAAS,SAAC,GAAsE,IAArEC,EAAoE,EAApEA,MAAOC,EAA6D,EAA7DA,KAAMC,EAAuD,EAAvDA,KAAMC,EAAiD,EAAjDA,OAAQC,EAAyC,EAAzCA,OAAQC,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,MAE/D,QAAXJ,IACDA,EAAS,0FAGX,IAAMK,EAAUtC,IANwE,EAOhEuC,IAAMC,UAAS,GAPiD,mBAOjFC,EAPiF,KAO3EC,EAP2E,KAiB1F,OACE,kBAACC,EAAA,EAAD,CAAMC,UAAWN,EAAQnC,MACvB,kBAAC0C,EAAA,EAAD,CACElC,OACE,kBAACmC,EAAA,EAAD,CAAQC,aAAW,SAASH,UAAWN,EAAQ3B,QAC5CyB,GAGLP,MAAOA,EACPmB,UAAS,UAAKjB,EAAL,aAAcD,GACvBc,UAAWN,EAAQzB,aAErB,kBAACoC,EAAA,EAAD,CACEL,UAAWN,EAAQ7B,MACnByC,MAAOjB,EACPJ,MAAOA,IAET,kBAACsB,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgBC,UAAU,KACvDvB,EADL,MACgBK,GAEd,kBAACe,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgBC,UAAU,KAA5D,WACWpB,IAGb,kBAACqB,EAAA,EAAD,CAAaZ,UAAWN,EAAQxB,WAC9B,kBAAC2C,EAAA,EAAD,CACEC,QAnCa,WACjBhB,GAAQ,IAmCJiB,KAAK,SAFP,QAMF,kBAACC,EAAA,EAAD,CACEC,kBAAgB,yBAChBC,mBAAiB,+BACjBlB,UAAWN,EAAQtB,MACnByB,KAAMA,EACNsB,QAzCgB,WAClBrB,GAAQ,IAyCNsB,sBAAoB,EACpBC,kBAAmBC,IACnBC,cAAe,CACbC,QAAS,MAGX,kBAACC,EAAA,EAAD,CAAMC,GAAI7B,GACR,yBAAKG,UAAWN,EAAQlB,OACtB,wBAAImD,GAAG,0BAAP,SACA,uBAAGA,GAAG,gCAAgCrC,Q,gFCqCnCsC,EA1IH,WAAM,MAGYhC,mBAAS,IAHrB,mBAGTiC,EAHS,KAGDC,EAHC,OAIYlC,mBAAS,IAJrB,mBAITmC,EAJS,KAIDC,EAJC,OAKYpC,mBAAS,IALrB,mBAKTqC,EALS,KAKDC,EALC,OAMUtC,mBAAS,SANnB,mBAMTuC,EANS,KAMFC,EANE,OAOQxC,mBAAS,IAPjB,mBAOTT,EAPS,KAOHkD,EAPG,OAQQzC,mBAAS,IARjB,mBAQTV,EARS,KAQHoD,EARG,KAYhBC,qBAAU,WACRC,MACC,CAACL,EAAOhD,EAAMD,IA4Cf,IAxCF,IAAMsD,EAAW,uCAAG,wCAAAC,EAAA,sEACKC,MAAK,oCAA+BP,EAA/B,iBAA6ChD,EAA7C,cAAuDD,EAAvD,sBADV,cACZyD,EADY,gBAECA,EAASC,OAFV,OAEZC,EAFY,OAGlBf,EAAUe,EAAKC,QAGX7D,EAAQ4D,EAAKC,OAAOC,KAAI,SAAAC,GAAI,OAAIA,EAAKC,SACjCC,EAAI,EAPM,YAOHA,EAAIjE,EAAMkE,QAPP,kCAQYT,MAAK,oCAA+BzD,EAAMiE,GAArC,sBARjB,eAQVE,EARU,iBASQA,EAAcR,OATtB,QASVS,EATU,QAUZC,EAAU,IACNC,KAAKF,GACbrB,EAAUsB,EAAQ,IAClBE,QAAQC,IAAIH,GAbI,QAOeJ,IAPf,2DAAH,qDAuCTQ,EAAW,GACRC,GAFS,IAAIC,MAAOC,cAECF,GAAS,KAAMA,IAC3CD,EAASH,KAAKI,GAIlB,OACE,6BACE,gCACM,kBAACG,EAAA,EAAD,KACI,yBAAK9D,UAAU,QACX,yBAAK+D,IAAKC,IAAMC,IAAI,UAExB,yBAAKjE,UAAU,SACX,kBAACkE,EAAA,EAAD,CAAQzD,QAAQ,YAAY0D,UAAQ,GAApC,aAKd,6BAASnE,UAAU,QACf,yBAAKA,UAAU,aACf,kBAAC8D,EAAA,EAAD,CAAWM,SAAS,MAChB,kBAAC5D,EAAA,EAAD,CAAYC,QAAQ,MAApB,iCAIJ,yBAAKT,UAAU,iBACf,0BAAMqE,SAzCI,SAAAC,GAChBA,EAAEC,iBACFnC,EAASH,IAuCwBuC,YAAU,EAACC,aAAa,OAEjD,kBAACC,EAAA,EAAD,CAAajE,QAAQ,UACnB,kBAACkE,EAAA,EAAD,CAAYhD,GAAG,mCAAf,QACA,kBAACiD,EAAA,EAAD,CACEC,QAAQ,kCACRlD,GAAG,4BACHmD,MAAO3F,EACP4F,SA5CK,SAACC,GAClB3C,EAAQ2C,EAAMC,OAAOH,SA6CT,kBAACI,EAAA,EAAD,CAAUJ,MAAM,SAAhB,SACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,UAAhB,UACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,UAAhB,YAIJ,kBAACK,EAAA,EAAD,CAAWxD,GAAG,eAAeyD,MAAM,QAAQ3E,QAAQ,SAASqE,MAAO7C,EAAQ8C,SA7DnE,SAAAT,GAChBpC,EAAUoC,EAAEW,OAAOH,UA8DX,kBAACJ,EAAA,EAAD,CAAajE,QAAQ,UACnB,kBAACkE,EAAA,EAAD,CAAYhD,GAAG,mCAAf,QACA,kBAACiD,EAAA,EAAD,CACEC,QAAQ,kCACRlD,GAAG,4BACHmD,MAAO5F,EACP6F,SAxDK,SAACC,GAClB1C,EAAQ0C,EAAMC,OAAOH,SAyDRpB,EAASX,KAAI,SAAAsC,GAAI,OAChB,kBAACH,EAAA,EAAD,CAAUJ,MAAOO,GAAOA,QAK9B,kBAACnB,EAAA,EAAD,CAAQ/E,KAAK,SAASsB,QAAQ,YAAYC,MAAM,WAAhD,aAON,6BAASV,UAAU,kBACjB,yBAAKA,UAAU,eACf,kBAAC8D,EAAA,EAAD,CAAWM,SAAS,KAAKpE,UAAU,oBAClC6B,EAAOkB,KAAI,SAAAuC,GAAK,OACb,kBAAC,EAAD,CAAQC,IAAKD,EAAMlG,OAAQH,MAAOqG,EAAMrC,MAAO/D,KAAMoG,EAAME,KAAMrG,KAAMmG,EAAMG,KAAMrG,OAAQkG,EAAMlG,OAAQC,OAAQiG,EAAMI,OAAQlG,OAAQuC,EAAO4D,MAAOlG,MAAOsC,EAAO6D,MAAOtG,KAAMyC,EAAO8D,KAAMtG,OAAQwC,EAAO+D,iBCxIxNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.12d62db4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dex-logo.2c8b3b9c.png\";","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '250px',\n    height: '410px',\n    margin: '5px',\n    backgroundColor: '#f4f4f4',\n    position: 'relative'\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n  avatar: {\n    fontSize: '12px',\n    backgroundColor: '#F9B416',\n  },\n  cardHeader: {\n    height: '75px',\n  },\n  actionBtn: {\n    position: 'absolute',\n    bottom: 0,\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nexport const Movies = ({title, year, type, imdbID, poster, plot, actors, rating, genre}) => {\n\n    if(poster === 'N/A') {\n      poster = 'https://d1klenmqvfdv9g.cloudfront.net/wp-content/uploads/2018/12/Asset-5-1-300x285.png';\n    }\n\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n\n    const handleOpen = () => {\n      setOpen(true);\n    };\n  \n    const handleClose = () => {\n      setOpen(false);\n    };\n\n  return (\n    <Card className={classes.root}>\n      <CardHeader\n        avatar={\n          <Avatar aria-label=\"rating\" className={classes.avatar}>\n            {rating}\n          </Avatar>\n        }              \n        title={title}\n        subheader={`${type}, ${year}`}\n        className={classes.cardHeader}\n      />\n      <CardMedia\n        className={classes.media}\n        image={poster}\n        title={title}\n      />\n      <CardContent>\n      <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {imdbID} | {genre}\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          actors: {actors}\n        </Typography>\n      </CardContent>\n      <CardActions className={classes.actionBtn}>\n        <IconButton\n          onClick={handleOpen}\n          size=\"small\"\n        >...\n        </IconButton>\n      </CardActions>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open}>\n          <div className={classes.paper}>\n            <h2 id=\"transition-modal-title\">About</h2>\n            <p id=\"transition-modal-description\">{plot}</p>\n          </div>\n        </Fade>\n      </Modal>\n    </Card>\n  );\n}\n\n","import React, { useState, useEffect } from 'react';\nimport './components/css/App.css';\nimport { Movies } from './components/Movies';\nimport logo from '../src/components/img/dex-logo.png'\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst App = () => {\n\n  // useState hook koji preko setMovies funkcije uzima sve podatke koje uzmemo sa APIs i storniramo u varijablu i te podatke koristimo u komponentama. if that makes sense\n  const [movies, setMovies] = useState([]);\n  const [titles, setTitles] = useState([]);\n  const [search, setSearch] = useState('');\n  const [query, setQuery] = useState('titan');\n  const [type, setType] = useState('');\n  const [year, setYear] = useState('');\n\n  // useEffect funkcija poziva se cim se stranica ucita i tako dobijamo odmah podatke sa APIs preko funkcije fetchMovies()\n\n  useEffect(() => {\n    fetchMovies();\n  }, [query, type, year]); // stavljamo prazan array kao drugi parametar da se useEffect poziva samo jednom\n\n  // funkcija koja uzima fetch podatke sa APIs\n  // moramo da zovemo asinhronu funkciju koja uzima podatke sa APIs jer ne znamo kada ce da odgovori\n  const fetchMovies = async ()=> {\n    const response = await fetch (`http://www.omdbapi.com/?s=${query}&type=${type}&y=${year}&apikey=63eb523a&`);\n    const data = await response.json();\n    setMovies(data.Search);\n\n    // pretraga po titlu filma iz prethodne pretrage | problem mogu samo po titlu da dobijem glumce, zanr, opis filma itd. | koristim vrednost unosa za pretragu po search metodi i taj input uzimam za pretragu za drugi reaquest koji iteracijom izlistam ponovo iste filmove ali po title metodi gde mogu da dobijem sve podatke o filmu. Problem koji moram da resim da mi sacuva u stirage sve ibjekte filmova kao jedan niz a ne za svaki objekat jedan niz tako da niz ima length 0. I prikaze u karticama na frontu samo podatke poslednjeg filma za svih deset filmoa koji se prikazu.\n    let title = data.Search.map(item => item.Title);\n    for(let i = 0; i < title.length; i++){\n      const responseTitle = await fetch (`http://www.omdbapi.com/?t=${title[i]}&apikey=63eb523a&`);\n      const dataTitle = await responseTitle.json();\n      let storage = [];\n      storage.push(dataTitle);\n      setTitles(storage[0]);\n      console.log(storage);\n    }\n  }\n\n  // let arrTitles = new Array(10).fill(titles);\n  // arrTitles.fill(titles);\n  // console.log(arrTitles);\n  // funkcija koja uzima vrednost koju upisemo u input polje\n  const useSearch = e => {\n    setSearch(e.target.value);\n  }\n\n  const runSearch = e => {\n    e.preventDefault();\n    setQuery(search);\n  }\n\n  const handleType = (event) => {\n    setType(event.target.value);\n  };\n\n  const handleYear = (event) => {\n    setYear(event.target.value);\n  };\n\n    let currentYear = new Date().getFullYear();\n    const listYear = [];\n    for (let index = currentYear; index >= 1920; index--){\n      listYear.push(index);\n    }\n      \n\n  return (\n    <div>\n      <header>\n            <Container>\n                <div className=\"logo\">\n                    <img src={logo} alt=\"logo\"/>\n                </div>\n                <div className=\"login\">\n                    <Button variant=\"contained\" disabled>Log in</Button>\n                </div>\n            </Container>                \n      </header>\n\n      <section className=\"land\">\n          <div className=\"main-text\">\n          <Container maxWidth=\"md\">\n              <Typography variant=\"h1\" >Movies, TV Shows, and more.\n              </Typography>\n          </Container>\n          </div>\n          <div className=\"search-fields\">\n          <form onSubmit={runSearch} noValidate autoComplete=\"off\">\n\n            <FormControl variant=\"filled\">\n              <InputLabel id=\"type-simple-select-filled-label\">Type</InputLabel>\n              <Select\n                labelId=\"type-simple-select-filled-label\"\n                id=\"type-simple-select-filled\"\n                value={type}\n                onChange={handleType}\n              >\n                <MenuItem value='movie'>Movie</MenuItem>\n                <MenuItem value='series'>Series</MenuItem>\n                <MenuItem value='season'>Season</MenuItem>\n              </Select>\n            </FormControl>\n\n            <TextField id=\"filled-basic\" label=\"title\" variant=\"filled\" value={search} onChange={useSearch} />\n\n            <FormControl variant=\"filled\">\n              <InputLabel id=\"year-simple-select-filled-label\">Year</InputLabel>\n              <Select\n                labelId=\"year-simple-select-filled-label\"\n                id=\"year-simple-select-filled\"\n                value={year}\n                onChange={handleYear}\n              >\n                {listYear.map(list => (\n                  <MenuItem value={list}>{list}</MenuItem>\n                ))}               \n                \n              </Select>\n            </FormControl>\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n              search\n            </Button>\n          </form>            \n          </div> \n      </section>\n\n      <section className=\"display-movies\">        \n        <div className=\"movies-grid\" >\n        <Container maxWidth=\"xl\" className=\"movies-container\">\n        {movies.map(movie => (\n            <Movies key={movie.imdbID} title={movie.Title} year={movie.Year} type={movie.Type} imdbID={movie.imdbID} poster={movie.Poster} rating={titles.Rated} genre={titles.Genre} plot={titles.Plot} actors={titles.Actors} />\n            \n        ))}\n          </Container>\n        </div>\n      </section>\n      \n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}